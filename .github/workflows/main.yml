name: Build

on:
  push:
    branches:
      - main


jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 21
        uses: actions/setup-java@v4.2.1
        with:
          java-version: 21
          distribution: corretto
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=${{ secrets.PROJECT_ID }} -Dsonar.projectName='${{ secrets.PROJECT_NAME }}'
      - name: Query status
        id: qgStatus
        uses: fjogeleit/http-request-action@v1.15.2
        with:
          url: '${{ secrets.SONAR_HOST_URL }}/api/qualitygates/project_status?projectKey=${{ secrets.PROJECT_ID}}'
          method: 'GET'
          bearerToken: ${{ secrets.SONAR_TOKEN }}
          timeout: 30000
          retry: 3
          retryWait: 5000
      - name: show status
        run: echo ${{ fromJson(steps.qgStatus.outputs.response).projectStatus.status}}
      - name: fail_if_error
        if: ${{ fromJson(steps.qgStatus.outputs.response).projectStatus.status == 'ERROR'}}
        uses: actions/github-script@v7.0.1
        with:
          script: |
            core.setFailed('quality gates not met') 
